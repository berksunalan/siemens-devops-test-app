image: hashicorp/terraform:1.5.0

variables:
  TF_VAR_aws_region: "eu-central-1"
  TF_VAR_project_name: "appReviewApi"
  TF_VAR_api_domain_name: "api.testdevops.com"
  TF_VAR_hosted_zone_name: "testdevops.com"
  TF_ROOT: ${CI_PROJECT_DIR}/terraform
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_COMMIT_REF_SLUG}

cache:
  paths:
    - ${TF_ROOT}/.terraform

stages:
  - test
  - validate
  - plan
  - apply
  - security

before_script:
  - cd ${TF_ROOT}
  - terraform --version
  - terraform init

test:
  stage: test
  image: python:3.9
  before_script:
    - python -V
    - pip install -r requirements.txt
    - pip install pytest pytest-cov flake8 bandit
  script:
    - pytest tests/ --cov=src/ --cov-report=xml
    - flake8 src/ tests/ --max-line-length=120
    - bandit -r src/ -f json -o bandit-results.json
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      sast: bandit-results.json

validate:
  stage: validate
  script:
    - terraform fmt -check -recursive
    - terraform validate
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "development"

plan:
  stage: plan
  script:
    - terraform plan -out=tfplan
  artifacts:
    paths:
      - ${TF_ROOT}/tfplan
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "development"

apply:
  stage: apply
  before_script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $TF_VAR_aws_region
  script:
    - terraform apply -auto-approve tfplan
  environment:
    name: $CI_COMMIT_REF_SLUG
    url: https://$TF_VAR_api_domain_name
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
    - if: $CI_COMMIT_BRANCH == "development"
      when: manual

security_scan:
  stage: security
  image: aquasec/tfsec:latest
  script:
    - tfsec ${TF_ROOT}
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "development"

cost_estimation:
  stage: security
  image: infracost/infracost:latest
  script:
    - infracost breakdown --path ${TF_ROOT} --format json --out-file infracost.json
    - infracost comment github --path infracost.json --repo $CI_PROJECT_PATH --pull-request $CI_MERGE_REQUEST_IID
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
